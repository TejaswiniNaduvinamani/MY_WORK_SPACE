package com.org.impl;

import javax.print.event.PrintJobAttributeListener;

public class LinkedListImpl {
	
	Node head;
	
	static class Node{
		int data;
		Node next;
		
		Node(int data){
			this.data=data;
			next = null;
		}
	}
	
	public void push(int data){
		
		Node newNode = new Node(data);
		newNode.next = head;
		head = newNode;
		
	}
	
	public void pushAfterNode(int data, Node prevNode){
		
		Node newNode = new Node(data);
		newNode.next = prevNode.next;
		prevNode.next = newNode;
		
	}
	
	public void pushEndNode(int data){
		
		Node newNode = new Node(data);
		
		if(head==null) {
			
			head = newNode;
		}
		else {
		Node last = head;
		while(last.next != null) {
			last = last.next;
			
		}
		
		last.next = newNode;		
		}
	}
	
	public void delete(int key){
		Node temp = head;
		Node prev=null;
		
		if(temp !=null && temp.data==key){
			head=temp.next;
			return;
		}
		
		while(temp != null && temp.data != key) {
			prev = temp;
			temp = temp.next;
		}
		
		if(temp==null){
			return;
		}
	
		prev.next = temp.next;
		
	}
	
	public static void main(String[] args){
		LinkedListImpl list = new LinkedListImpl();
		
		
//		list.head = new Node(1);
//		Node nodeTwo = new Node(2);
//		Node nodeThree = new Node(3);
//		
//		list.head.next = nodeTwo;
//		nodeTwo.next = nodeThree;	
//		list.push(1);
//		list.push(2);
//		list.push(3);
		
		list.pushEndNode(1);
		list.pushEndNode(2);
		list.pushEndNode(3);
		
		
		list.printList(list);
	}
	
	public void printList(LinkedListImpl list){
		
		while(list.head!=null){
			System.out.println(list.head.data);
//			if(list.head.data == 2){
//				list.pushAfterNode(4, list.head);
//			}
			list.head = list.head.next;				
		}
	}
	
	

}
